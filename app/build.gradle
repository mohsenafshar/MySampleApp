apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

apply plugin: "androidx.navigation.safeargs.kotlin"

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "ir.mohsenafshar.mysampleapp"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    testOptions.unitTests {
        includeAndroidResources = true

        all {
            testLogging {
                events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
            }
        }
    }

    dataBinding {
        enabled = true
        enabledForTests = true
    }

    androidExtensions {
        experimental = true
    }

    // Note : We can use flavors for seperating mock data
    // or simply add mock direcotry to main :
    //sourceSets { main { java.srcDirs = ['src/main/java', 'src/mock/java'] } }

    flavorDimensions 'buildType'

    productFlavors {
        mock {
            dimension 'buildType'
            applicationIdSuffix = ".mock"
        }
        prod {
            dimension 'buildType'
        }
    }

    // Remove mockRelease as it's not needed.
    android.variantFilter { variant ->
        if (variant.buildType.name.equals('release')
                && variant.getFlavors().get(0).name.equals('mock')) {
            variant.setIgnore(true)
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.1.0'
    implementation "androidx.fragment:fragment-ktx:1.1.0"
    implementation "com.jakewharton.timber:timber:4.7.1"

    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'

    // Test
    testImplementation 'junit:junit:4.12'
    testImplementation 'androidx.test:core:1.2.0'
    testImplementation 'org.mockito:mockito-all:1.10.19'
    testImplementation "android.arch.core:core-testing:$versions.archLifecycleVersion"

    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test:core:1.2.0'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test:rules:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    androidTestImplementation 'com.android.support.test.espresso:espresso-contrib:3.0.2'
    androidTestImplementation "androidx.fragment:fragment-testing:1.1.0"
    implementation 'com.squareup.okhttp3:mockwebserver:4.0.0'

    // Dependencies for Android unit tests
//    androidTestImplementation "junit:junit:$junitVersion"
//    androidTestImplementation "org.mockito:mockito-core:$mockitoVersion"
//    androidTestImplementation "com.linkedin.dexmaker:dexmaker-mockito:$dexMakerVersion"

    // Dependencies for local unit tests
//    testImplementation "junit:junit:$junitVersion"
//    testImplementation "org.mockito:mockito-core:$mockitoVersion"
//    testImplementation "org.hamcrest:hamcrest-all:$hamcrestVersion"
//    testImplementation "androidx.arch.core:core-testing:$archTestingVersion"
//    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"
//    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesVersion"
//    testImplementation "org.robolectric:robolectric:$robolectricVersion"
//    testImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
//    testImplementation "androidx.test.espresso:espresso-contrib:$espressoVersion"
//    testImplementation "androidx.test.espresso:espresso-intents:$espressoVersion"
//    testImplementation "com.google.truth:truth:$truthVersion"

    // AndroidX Test - JVM testing
//    testImplementation "androidx.test:core-ktx:$androidXTestCoreVersion"
//    testImplementation "androidx.test.ext:junit-ktx:$androidXTestExtKotlinRunnerVersion"
//    testImplementation "androidx.test:rules:$androidXTestRulesVersion"
//    // Once https://issuetracker.google.com/127986458 is fixed this can be testImplementation
//    implementation "androidx.fragment:fragment-testing:$fragmentVersion"
//    implementation "androidx.test:core:$androidXTestCoreVersion"
//    implementation "androidx.fragment:fragment:$fragmentVersion"

    // AndroidX Test - Instrumented testing
//    androidTestImplementation "androidx.test:core-ktx:$androidXTestCoreVersion"
//    androidTestImplementation "androidx.test.ext:junit-ktx:$androidXTestExtKotlinRunnerVersion"
//    androidTestImplementation "androidx.test:rules:$androidXTestRulesVersion"
//    androidTestImplementation "androidx.room:room-testing:$roomVersion"
//    androidTestImplementation "androidx.arch.core:core-testing:$archTestingVersion"
//    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
//    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espressoVersion"
//    androidTestImplementation "androidx.test.espresso:espresso-intents:$espressoVersion"
//    androidTestImplementation "androidx.test.espresso.idling:idling-concurrent:$espressoVersion"
//    androidTestImplementation "org.robolectric:annotations:$robolectricVersion"
//    implementation "androidx.test.espresso:espresso-idling-resource:$espressoVersion"

    // Resolve conflicts between main and test APK:
//    androidTestImplementation "androidx.annotation:annotation:$androidXAnnotations"
//    androidTestImplementation "androidx.legacy:legacy-support-v4:$androidXLegacySupport"
//    androidTestImplementation "androidx.recyclerview:recyclerview:$recyclerViewVersion"
//    androidTestImplementation "androidx.appcompat:appcompat:$appCompatVersion"
//    androidTestImplementation "com.google.android.material:material:$materialVersion"

    // Kodein DI
//    implementation 'org.kodein.di:kodein-di-generic-jvm:6.3.1'
//    implementation 'org.kodein.di:kodein-di-framework-android-x:6.3.1'

    implementation "com.google.dagger:dagger:$versions.dagger"
    kapt "com.google.dagger:dagger-compiler:$versions.dagger"
    implementation "com.google.dagger:dagger-android-support:$versions.dagger"
    kapt "com.google.dagger:dagger-android-processor:$versions.dagger"

    // Architecture Components
    implementation "androidx.lifecycle:lifecycle-extensions:$versions.archLifecycleVersion"
    kapt "android.arch.lifecycle:compiler:$versions.archLifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.archLifecycleVersion"
    implementation "androidx.navigation:navigation-fragment-ktx:$versions.navigationVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$versions.navigationVersion"

    // Rx
    implementation 'io.reactivex.rxjava2:rxjava:2.2.10'
    implementation 'io.reactivex.rxjava2:rxkotlin:2.3.0'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'

    // Rx Binding
    implementation 'com.jakewharton.rxbinding3:rxbinding:3.0.0'

    // Retrofit
    def retrofit = "com.squareup.retrofit2"
    implementation retrofit + ":retrofit:" + versions.retrofit
    implementation retrofit + ":converter-gson:" + versions.retrofit
    implementation retrofit + ":adapter-rxjava2:" + versions.retrofit

    // Stetho
    def stetho = "com.facebook.stetho"
    implementation stetho + ":stetho:" + versions.stetho
    implementation stetho + ":stetho-okhttp3:" + versions.stetho

    // MultiDex
    implementation 'androidx.multidex:multidex:2.0.1'

}
